// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/TykTechnologies/gateway-sdk/pkg/apim (interfaces: HotReloadAPI)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	http "net/http"
	reflect "reflect"

	apim "github.com/TykTechnologies/gateway-sdk/pkg/apim"
	gomock "github.com/golang/mock/gomock"
)

// MockHotReloadAPI is a mock of HotReloadAPI interface.
type MockHotReloadAPI struct {
	ctrl     *gomock.Controller
	recorder *MockHotReloadAPIMockRecorder
}

// MockHotReloadAPIMockRecorder is the mock recorder for MockHotReloadAPI.
type MockHotReloadAPIMockRecorder struct {
	mock *MockHotReloadAPI
}

// NewMockHotReloadAPI creates a new mock instance.
func NewMockHotReloadAPI(ctrl *gomock.Controller) *MockHotReloadAPI {
	mock := &MockHotReloadAPI{ctrl: ctrl}
	mock.recorder = &MockHotReloadAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHotReloadAPI) EXPECT() *MockHotReloadAPIMockRecorder {
	return m.recorder
}

// HotReload mocks base method.
func (m *MockHotReloadAPI) HotReload(arg0 context.Context) apim.ApiHotReloadRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HotReload", arg0)
	ret0, _ := ret[0].(apim.ApiHotReloadRequest)
	return ret0
}

// HotReload indicates an expected call of HotReload.
func (mr *MockHotReloadAPIMockRecorder) HotReload(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HotReload", reflect.TypeOf((*MockHotReloadAPI)(nil).HotReload), arg0)
}

// HotReloadExecute mocks base method.
func (m *MockHotReloadAPI) HotReloadExecute(arg0 apim.ApiHotReloadRequest) (*apim.ApiStatusMessage, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HotReloadExecute", arg0)
	ret0, _ := ret[0].(*apim.ApiStatusMessage)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// HotReloadExecute indicates an expected call of HotReloadExecute.
func (mr *MockHotReloadAPIMockRecorder) HotReloadExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HotReloadExecute", reflect.TypeOf((*MockHotReloadAPI)(nil).HotReloadExecute), arg0)
}

// HotReloadGroup mocks base method.
func (m *MockHotReloadAPI) HotReloadGroup(arg0 context.Context) apim.ApiHotReloadGroupRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HotReloadGroup", arg0)
	ret0, _ := ret[0].(apim.ApiHotReloadGroupRequest)
	return ret0
}

// HotReloadGroup indicates an expected call of HotReloadGroup.
func (mr *MockHotReloadAPIMockRecorder) HotReloadGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HotReloadGroup", reflect.TypeOf((*MockHotReloadAPI)(nil).HotReloadGroup), arg0)
}

// HotReloadGroupExecute mocks base method.
func (m *MockHotReloadAPI) HotReloadGroupExecute(arg0 apim.ApiHotReloadGroupRequest) (*apim.ApiStatusMessage, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HotReloadGroupExecute", arg0)
	ret0, _ := ret[0].(*apim.ApiStatusMessage)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// HotReloadGroupExecute indicates an expected call of HotReloadGroupExecute.
func (mr *MockHotReloadAPIMockRecorder) HotReloadGroupExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HotReloadGroupExecute", reflect.TypeOf((*MockHotReloadAPI)(nil).HotReloadGroupExecute), arg0)
}
