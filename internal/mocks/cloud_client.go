// Code generated by MockGen. DO NOT EDIT.
// Source: cloud_client.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	http "net/http"
	reflect "reflect"

	cloud "github.com/TykTechnologies/cloud-sdk/cloud"
	gomock "github.com/golang/mock/gomock"
)

// MockCloudClient is a mock of CloudClient interface.
type MockCloudClient struct {
	ctrl     *gomock.Controller
	recorder *MockCloudClientMockRecorder
}

// MockCloudClientMockRecorder is the mock recorder for MockCloudClient.
type MockCloudClientMockRecorder struct {
	mock *MockCloudClient
}

// NewMockCloudClient creates a new mock instance.
func NewMockCloudClient(ctrl *gomock.Controller) *MockCloudClient {
	mock := &MockCloudClient{ctrl: ctrl}
	mock.recorder = &MockCloudClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCloudClient) EXPECT() *MockCloudClientMockRecorder {
	return m.recorder
}

// CreateEnv mocks base method.
func (m *MockCloudClient) CreateEnv(ctx context.Context, env cloud.Loadout, orgId, teamId string) (cloud.InlineResponse2012, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEnv", ctx, env, orgId, teamId)
	ret0, _ := ret[0].(cloud.InlineResponse2012)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateEnv indicates an expected call of CreateEnv.
func (mr *MockCloudClientMockRecorder) CreateEnv(ctx, env, orgId, teamId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEnv", reflect.TypeOf((*MockCloudClient)(nil).CreateEnv), ctx, env, orgId, teamId)
}

// CreateTeam mocks base method.
func (m *MockCloudClient) CreateTeam(ctx context.Context, team cloud.Team, oid string) (cloud.InlineResponse2011, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTeam", ctx, team, oid)
	ret0, _ := ret[0].(cloud.InlineResponse2011)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateTeam indicates an expected call of CreateTeam.
func (mr *MockCloudClientMockRecorder) CreateTeam(ctx, team, oid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTeam", reflect.TypeOf((*MockCloudClient)(nil).CreateTeam), ctx, team, oid)
}

// GetOrgById mocks base method.
func (m *MockCloudClient) GetOrgById(ctx context.Context, oid string) (cloud.InlineResponse2005, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgById", ctx, oid)
	ret0, _ := ret[0].(cloud.InlineResponse2005)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetOrgById indicates an expected call of GetOrgById.
func (mr *MockCloudClientMockRecorder) GetOrgById(ctx, oid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgById", reflect.TypeOf((*MockCloudClient)(nil).GetOrgById), ctx, oid)
}

// GetOrgs mocks base method.
func (m *MockCloudClient) GetOrgs(ctx context.Context) (cloud.InlineResponse20014, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgs", ctx)
	ret0, _ := ret[0].(cloud.InlineResponse20014)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetOrgs indicates an expected call of GetOrgs.
func (mr *MockCloudClientMockRecorder) GetOrgs(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgs", reflect.TypeOf((*MockCloudClient)(nil).GetOrgs), ctx)
}

// GetTeamById mocks base method.
func (m *MockCloudClient) GetTeamById(ctx context.Context, oid, tid string) (cloud.InlineResponse2011, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTeamById", ctx, oid, tid)
	ret0, _ := ret[0].(cloud.InlineResponse2011)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetTeamById indicates an expected call of GetTeamById.
func (mr *MockCloudClientMockRecorder) GetTeamById(ctx, oid, tid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTeamById", reflect.TypeOf((*MockCloudClient)(nil).GetTeamById), ctx, oid, tid)
}

// GetTeams mocks base method.
func (m *MockCloudClient) GetTeams(ctx context.Context, oid string) (cloud.InlineResponse20017, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTeams", ctx, oid)
	ret0, _ := ret[0].(cloud.InlineResponse20017)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetTeams indicates an expected call of GetTeams.
func (mr *MockCloudClientMockRecorder) GetTeams(ctx, oid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTeams", reflect.TypeOf((*MockCloudClient)(nil).GetTeams), ctx, oid)
}
